# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
update_fastlane

default_platform(:ios)

platform :ios do
  desc "Updates match certificates"
  lane :update_match do
    if is_ci
      setup_ci
      api_key = app_store_connect_api_key(
        "key_id": ENV['APPLE_APP_STORE_API_KEY_ID'],
        "issuer_id": ENV['APPLE_APPSTORE_API_ISSUER_ID'],
        "key_content": ENV['APPLE_APP_STORE_API_KEY'],
        is_key_content_base64: True,
      )
    end
    if !is_ci
      api_key = app_store_connect_api_key(
        key_id: "V63U6LFWBL",
        issuer_id: "69a6de74-e8dd-47e3-e053-5b8c7c11a4d1",
        key_filepath: "/Users/justinkumpe/Documents/AuthKey_V63U6LFWBL.p8",
    )
    end
    match(
      generate_apple_certs: true, 
      api_key: api_key,
      type: "appstore"
    )

  end

  lane :matchget do
    if is_ci
      setup_ci
    end
    match(generate_apple_certs: true, type: "development", readonly: is_ci, app_identifier: "com.kumpeapps.flet.kumpe3dkiosk", git_basic_authorization: ENV['MATCH_GIT_BASIC_AUTHORIZATION'], git_url: "https://github.com/kumpeapps/fastlane_certs.git")
    match(generate_apple_certs: true, type: "appstore", readonly: is_ci, app_identifier: "com.kumpeapps.flet.kumpe3dkiosk", git_basic_authorization: ENV['MATCH_GIT_BASIC_AUTHORIZATION'], git_url: "https://github.com/kumpeapps/fastlane_certs.git")
  end

  desc "Configure Flutter project without building it"
  lane :config_flutter do

    Dir.chdir "../.." do
      sh("flutter", "build", "ios", "--release", "--no-codesign", "--config-only")
    end
  end

  desc "Upload to App Store"
  lane :upload_appstore_old do

    gym(
      export_method: "app-store",
      output_directory: "../build",
      skip_build_archive: true,
      archive_path: "../build/ipa/Runner.xcarchive",
      output_name: "kumpe3dkiosk.ipa",
      xcargs: "-allowProvisioningUpdates",
      export_options: {
        provisioningProfiles: { 
          "com.kumpeapps.flet.kumpe3dkiosk" => "match AppStore com.kumpeapps.flet.kumpe3dkiosk"
        }
      }
    )

    
    deliver(
      skip_screenshots: true,
      skip_metadata: true,
      run_precheck_before_submit: false,
      submit_for_review: false,
      force: true
    )    
  end

  lane :sign_xcarchive_and_publish do
    default_platform(:ios)
  
    # You must create a fake xcodeproj to pass in.
    # This is needed to work around this issue in fastlane: https://github.com/fastlane/fastlane/issues/13528
    # See also: https://github.com/fastlane/fastlane/issues/11402 and https://github.com/fastlane/fastlane/issues/15876
    xcodeproj_path = File.expand_path("../build/ipa/fake.xcodeproj")
    Xcodeproj::Project.new(xcodeproj_path).save
  
    build_app(
      configuration: "Release",
      project: xcodeproj_path,
      output_name: "kumpe3dkiosk.ipa",
      export_method: "app-store",
      export_options: { iCloudContainerEnvironment: "Production" },
      export_team_id: CredentialsManager::AppfileConfig.try_fetch_value(:team_id), # This requires the team_id to be set in the fastlane `Appfile`
      skip_build_archive: true,
      skip_package_dependencies_resolution: true,
      archive_path: "/Users/appveyor/projects/kumpe3d-kiosk/build/ipa/Runner.xcarchive",
      export_options: {
        provisioningProfiles: { 
          "com.kumpeapps.flet.kumpe3dkiosk" => "match AppStore com.kumpeapps.flet.kumpe3dkiosk"
        }
      }
   )
  
    upload_to_testflight(
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )
  end
end
